version: 2.1

orbs:
  # https://circleci.com/orbs/registry/orb/circleci/docker-publish
  docker-publish: circleci/docker-publish@0.1.7

workflows:
  test:
    jobs:
      - test-python-3:
          filters:
            branches:
              ignore: 
                - master

  # This workflow will be run on all branches but master (to test)
  build_without_publishing_job:
    jobs:
      - docker-publish/publish:
          image: vanessa/expfactory-builder
          dockerfile: expfactory/templates/build/docker/builder-base/Dockerfile
          registry: quay.io
          deploy: false
          tag: base
          filters:
            branches:
              ignore: 
                - master
          after_build:
            - run:
                name: Preview Docker Tag for Build
                command: |
                   for string in $(cat expfactory/version.py | grep __version__); do
                          DOCKER_TAG="${string//\"}"
                   done
                   echo "Version for Docker tag is ${DOCKER_TAG}"
            - run:
                name: Generate Builder (not base)
                command: |
                    echo "PWD is ${PWD}"
                    cd expfactory/templates/build/docker/builder
                    docker build --no-cache -t quay.io/vanessa/expfactory-builder .
            - run: *build_docker_image
            - run: *install_python_3
            - run: *install
            - run: *test_builder
            - run: *test_expfactory
            - store_test_results:
                path: /root/out/tests

  # This workflow will deploy images on merge to master only
  docker_with_lifecycle:
    jobs:
      - docker-publish/publish:
          image: vanessa/expfactory-builder
          dockerfile: expfactory/templates/build/docker/builder-base/Dockerfile
          registry: quay.io
          tag: base
          filters:
            branches:
             only: master
          after_build:
            - run:
                name: Publish Docker Tag with Expfactory Version
                command: |
                   for string in $(cat expfactory/version.py | grep __version__); do
                          DOCKER_TAG="${string//\"}"
                   done
                   echo "Version for Docker tag is ${DOCKER_TAG}"
                   docker tag quay.io/vanessa/expfactory-builder:base quay.io/vanessa/expfactory-builder:base-v${DOCKER_TAG}
                   echo "PWD is ${PWD}"
                   ls
                   cd expfactory/templates/build/docker/builder
                   docker build --no-cache -t quay.io/vanessa/expfactory-builder .
                   docker tag quay.io/vanessa/expfactory-builder quay.io/vanessa/expfactory-builder:${DOCKER_TAG}


install: &install
  name: install expfactory
  command: |
     cd /root/repo
     pip uninstall expfactory --yes || echo "Not installed"
     pip install .[all]

build_docker_image: &build_docker_image
  name: Build Docker Images
  command: |
        echo $PWD
        echo " Testing container: ${CONTAINER_NAME}"
        ls
        cd expfactory/templates/build/docker/builder-ci && 
        echo "Building CI builder in /tmp/builder for testing current PR..."
        mkdir -p /tmp/builder
        cp ../builder-dev/entrypoint.sh /tmp/builder/entrypoint.sh
        cp Dockerfile /tmp/builder
        cp build.sh /tmp/builder && chmod u+x /tmp/builder/build.sh
        cp -R /root/repo /tmp/builder/expfactory && cd /tmp/builder && ls
        echo "Working directory is ${PWD}"
        # Build docker image
        e=1 && for i in {1..5}; do
          EXPFACTORY_BRANCH=$CIRCLE_BRANCH docker build \
            --cache-from=${CONTAINER_NAME} \
            --rm=false \
            -t ${CONTAINER_NAME}:latest . \
          && e=0 && break || sleep 15
        done && [ "$e" -eq "0" ]

install_python_3: &install_python_3
  name: install Python 3.5 dependencies
  command: | 
      echo "Testing builder in $PWD" && ls
      cd $HOME
      apk add --no-cache python3
      python3 -m ensurepip
      rm -r /usr/lib/python*/ensurepip
      pip3 install --upgrade pip setuptools
      if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi
      if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi
      rm -r /root/.cache


test_builder: &test_builder
  name: Test Expfactory Builder
  command: |
    python --version
    mkdir -p /tmp/data && cd /tmp/data
    echo "Testing expfactory-builder"

    # Run detached container, and create recipe
    docker run --name builder --entrypoint bash -dt quay.io/vanessa/expfactory-builder-ci
    docker exec builder /bin/bash /entrypoint.sh build test-task
    docker cp builder:/data/Dockerfile Dockerfile
    docker cp builder:/data/startscript.sh startscript.sh
    docker stop builder
    echo "Contents of /tmp/data"
    ls

    echo "Building container"
    docker build -t expfactory/experiments .
    echo "Start [filesystem][sqlite]"
    docker run -d -p 80:80 --name experiments-fs expfactory/experiments --headless start
    docker run -d --name experiments-sqlite expfactory/experiments --database sqlite --headless start

    # Get the hostname
    container=$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' experiments-fs;)
    echo "Running container is at ${container}"


test_expfactory: &test_expfactory
  name: Test Expfactory
  command: |
    cd /root/repo/expfactory
    python -m unittest testing.test_experiment
    python -m unittest testing.test_client 
